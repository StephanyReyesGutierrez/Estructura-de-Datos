package pila.tarea;

import java.util.Scanner;

public class PilaTarea {

    public static void main(String[] args) {
    Scanner teclado = new Scanner(System.in);
        int tam = 0;//declara tamaño de la pila 
        
        // Pedir el tamaño de la pila al usuario
        System.out.print("Ingrese el tamaño maximo de la pila: ");
        String entradadeusuario = teclado.nextLine();/* es String ya que si coloca una letra o otro
        el programa no solo finalice*/ 
        
        if (NumeroEntero(entradadeusuario)) {
        //Esta funcion evalua que caracter entra por el ususario, debe ser solo entero.
            tam = convertirCadenaAEntero(entradadeusuario);
        /* Si el numero es un entero, el numero o los numeros ingresados lo detectara como uno 
        solo ej. 6,5,7 sera 657. Ya comienza a guardarlo en tam, esta varible para colocarlo en el 
        arreglo pila para ingresar el tamaño, ya que paso por los condicionales previos para
        ser aceptado. Convierte la cadena entradadeusuario a un número entero usando la función 
            convertirCadenaAEntero.*/
            if (tam <= 0) {
        //Si el numero ingresado por el usuario es negativo mostrara el mensaje.
                System.out.println("Numero negativo al tamaño de la pila. Vacio");
        //Retorna, si no, terminara el programa.
            return;
            }
        } else {
            System.out.println("Tamaño invalido. Debe ser un numero entero positivo.");
            return;
            // Si no cumple el que sea un numero y ademas entero positivo mostrara el mensaje.
        }

        int[] pila = new int[tam];  // Arreglo que simula la pila,con el tamaño ya previamente evaluado
        int tope = -1;  /* Controla el último elemento ingresado en la pila, inicializa en -1 ya que
        cuando se agrega el primer número, tope++ hace que tope pase de -1 a 0, y el número se almacena
        en la primera posición del arreglo (pila[0]).*/
        String opcionmenu;// la opcion que quiere realizar el usuario
        int opcion = 0;//contendrá la opción del menú convertida en entero.

        do {/* se inicia el ciclo do-while ya que este permite mostrar almenos una vez el 
        menu a menos que el usuario quiera salir*/
            System.out.println("\nMenu:");
            System.out.println("1. Agregar numero a la pila");
            System.out.println("2. Mostrar el ultimo numero agregado");
            System.out.println("3. Salir");
            System.out.print("Seleccione una opcion: ");

            opcionmenu = teclado.nextLine();
            if (NumeroEntero(opcionmenu)) {// nuevamente se evalua si el numero de menu es entero
             opcion = convertirCadenaAEntero(opcionmenu);  /*Convertir a entero la cadena de
             caracteres ej. 1,2,3 sera 123 y se almacenara en opcion para luego usarla en switch*/
            } else {
                System.out.println("Opcion no valida, intente de nuevo.");
                /*si para elegir en la opcion de menu no se coloca un numero entero y ademas 
                que no sea parte del menu, mostrara ese mensaje.*/
                
            }

            switch (opcion) {
            // Ya que se elijio la opcion switch dira que serie de acciones se haran por cada una. 
                case 1:
                // Comprobar si la pila está llena
                if (tope < tam - 1) {// Verifica si hay espacio en la pila.Tope debe ser menor al tamaño
                    System.out.print("Ingrese un número: ");
                    String entradaNumero = teclado.nextLine();/* se coloca string para que tambien 
                    acepte otros caracteres*/
                      if (NumeroEntero(entradaNumero)) {/*verifica si lo ingresado es un numero entero si es
                      asi seguira*/
                      int numero = convertirCadenaAEntero(entradaNumero);  /* Convertir el número a entero
                      en caso de ser varios numeros y se almacenara en numero*/
                      pila[++tope] = numero;  /* Agregar número al lugar en la pila e incrementara tope para otra 
                      pocision*/
                      System.out.println("Número " + numero + " agregado a la pila.");
                      } else {
                      System.out.println("No se aceptan caracteres o decimales. Solo números enteros.");
                      }
                } else {
                    System.out.println("La pila está llena. No se puede agregar más números.");
                    }
                    break;

                case 2:
                // Comprobar si la pila está vacía
                if (tope >= 0) {//tope (numeros ingresados) debe ser  mayor a cero
                    System.out.println("Último número en la pila: " + pila[tope]);  // Mostrar sin eliminar
                } else {
                    System.out.println("La pila está vacía.");//si tope es menor a 0
                    }
                    break;

                case 3:
                    System.out.println("Saliendo del programa...");
                    break;

                default:
                    System.out.println("Opción no válida, intente de nuevo.");
                    // Si se coloca cualquier caracter que no sea un numero entero 
                    break;
            }
        } while (opcion != 3);// Se ejecutara hasta que el usuario desee salir.
    }
    
    
 /* Función para verificar si una cadena representa un número entero y es
    booleano para colocar si es verdadero o falso*/
   public static boolean NumeroEntero(String cadena) {
   
    // Permitir signo negativo solo si está en la primera posición
    if (cadena.startsWith("-")) {
    /*Este condicional verifica si la cadena comienza con el carácter -, 
    si es así, indica que el número es negativo, no lo tomara en cuenta*/
    if (cadena.equals("-")) { //Si solo se coloca un caracter se retornara y mostrara un mensaje
            return false;
        }
        // Comprobar el resto de la cadena
        cadena = cadena.substring(1); /*Ignorar el primer carácter '-' para
        evaluarlo como un positivo */
    }

    /* Verificar si la cadena restante contiene solo dígitos.Esta línea usa la 
    función matches para verificar que todos los caracteres en la cadena sean 
    dígitos ([0-9])*/
    if (!cadena.matches("[0-9]+")) {
    /*Si la cadena no coincide con el patrón (es decir, contiene letras,
    símbolos o está vacía), cadena.matches("[0-9]+") devolverá false, y el 
    operador ! lo convertirá en true para que el codigo no de un error.*/
        return false;
    }

    return true;// de no cumplirse lo anterior si es numero positivo
}
   
    // Función para convertir una cadena de caracteres a un número entero manualmente
    public static int convertirCadenaAEntero(String cadena) {
        int numero = 0;
        //Inicializa la variable numero a 0. Esta variable almacenará el número final.
        boolean negativo = false;
        //Se usará para determinar si el número es negativo.
        int inicio = 0;
        //Esta variable define desde qué posición en la cadena comenzar a procesar los caracteres.
        if (cadena.charAt(0) == '-') {/*Este condicional verifica si el 
        primer carácter de la cadena es un signo menos ('-'). Si es así,
        significa que el número es negativo.*/
       
            negativo = true;// si se encuentra un negativo se establece en verdadero 
            inicio = 1;  // Iniciar después del signo negativo
        }

        for (int i = inicio; i < cadena.length(); i++) {
        //recorre cada carácter de la cadena, empezando desde la posición definida por inicio.
            numero = numero * 10 + (cadena.charAt(i) - '0'); 
            // Convertir cada carácter en dígito y construir el número
             /*Esta línea convierte el carácter en un número. Se toma el carácter en 
        la posición i de la cadena y se resta '0' para obtener el valor numérico
        del carácter. Luego, ese valor se multiplica por 10 para desplazarse en el lugar decimal
        correcto y se suma al valor de numero. Esto permite construir el número entero, carácter 
        por carácter.*/
        }

        return negativo ? -numero : numero;
        /*Este es un operador ternario que devuelve -numero si la variable negativo es true
        (es decir, si el número original era negativo), o numero si negativo es false (es decir,
        si el número es positivo).*/
    }
}
  


